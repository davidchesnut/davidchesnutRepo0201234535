### YamlMime:ManagedReference
items:
- uid: HelloDocfx.Class1
  commentId: T:HelloDocfx.Class1
  id: Class1
  parent: HelloDocfx
  children:
  - HelloDocfx.Class1.#ctor(System.Int32)
  - HelloDocfx.Class1.ConvertToDouble
  - HelloDocfx.Class1.SetInnerClass(System.String,HelloDocfx.Class1.InnerClass)
  - HelloDocfx.Class1.Value
  langs:
  - csharp
  - vb
  name: Class1
  nameWithType: Class1
  fullName: HelloDocfx.Class1
  type: Class
  source:
    id: Class1
    path: E:\docfx-playing\docfx_walk\docfx_project\src\HelloDocfx\HelloDocfx\Class1.cs
    startLine: 11
  assemblies:
  - HelloDocfx
  namespace: HelloDocfx
  summary: "\nHello this is **Class1** from *HelloDocfx* all right!\n"
  example: []
  syntax:
    content: public class Class1
    content.vb: Public Class Class1
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: HelloDocfx.Class1.Value
  commentId: P:HelloDocfx.Class1.Value
  id: Value
  parent: HelloDocfx.Class1
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: Class1.Value
  fullName: HelloDocfx.Class1.Value
  type: Property
  source:
    id: Value
    path: E:\docfx-playing\docfx_walk\docfx_project\src\HelloDocfx\HelloDocfx\Class1.cs
    startLine: 14
  assemblies:
  - HelloDocfx
  namespace: HelloDocfx
  syntax:
    content: public int Value { get; }
    content.vb: Public ReadOnly Property Value As Integer
    parameters: []
    return:
      type: System.Int32
  overload: HelloDocfx.Class1.Value*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: HelloDocfx.Class1.#ctor(System.Int32)
  commentId: M:HelloDocfx.Class1.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: HelloDocfx.Class1
  langs:
  - csharp
  - vb
  name: Class1(Int32)
  nameWithType: Class1.Class1(Int32)
  fullName: HelloDocfx.Class1.Class1(System.Int32)
  type: Constructor
  source:
    id: .ctor
    path: E:\docfx-playing\docfx_walk\docfx_project\src\HelloDocfx\HelloDocfx\Class1.cs
    startLine: 20
  assemblies:
  - HelloDocfx
  namespace: HelloDocfx
  summary: "\nThis is a ctor\n"
  example: []
  syntax:
    content: public Class1(int value)
    content.vb: Public Sub New(value As Integer)
    parameters:
    - id: value
      type: System.Int32
      description: The value of the class
  overload: HelloDocfx.Class1.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: HelloDocfx.Class1.ConvertToDouble
  commentId: M:HelloDocfx.Class1.ConvertToDouble
  id: ConvertToDouble
  parent: HelloDocfx.Class1
  langs:
  - csharp
  - vb
  name: ConvertToDouble()
  nameWithType: Class1.ConvertToDouble()
  fullName: HelloDocfx.Class1.ConvertToDouble()
  type: Method
  source:
    id: ConvertToDouble
    path: E:\docfx-playing\docfx_walk\docfx_project\src\HelloDocfx\HelloDocfx\Class1.cs
    startLine: 25
  assemblies:
  - HelloDocfx
  namespace: HelloDocfx
  syntax:
    content: public double ConvertToDouble()
    content.vb: Public Function ConvertToDouble As Double
    return:
      type: System.Double
  overload: HelloDocfx.Class1.ConvertToDouble*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: HelloDocfx.Class1.SetInnerClass(System.String,HelloDocfx.Class1.InnerClass)
  commentId: M:HelloDocfx.Class1.SetInnerClass(System.String,HelloDocfx.Class1.InnerClass)
  id: SetInnerClass(System.String,HelloDocfx.Class1.InnerClass)
  parent: HelloDocfx.Class1
  langs:
  - csharp
  - vb
  name: SetInnerClass(String, Class1.InnerClass)
  nameWithType: Class1.SetInnerClass(String, Class1.InnerClass)
  fullName: HelloDocfx.Class1.SetInnerClass(System.String, HelloDocfx.Class1.InnerClass)
  type: Method
  source:
    id: SetInnerClass
    path: E:\docfx-playing\docfx_walk\docfx_project\src\HelloDocfx\HelloDocfx\Class1.cs
    startLine: 35
  assemblies:
  - HelloDocfx
  namespace: HelloDocfx
  summary: "\nA method referencing a inner class\n"
  example: []
  syntax:
    content: public void SetInnerClass(string name, Class1.InnerClass inner)
    content.vb: Public Sub SetInnerClass(name As String, inner As Class1.InnerClass)
    parameters:
    - id: name
      type: System.String
      description: The name
    - id: inner
      type: HelloDocfx.Class1.InnerClass
      description: A inner class with type <xref href="HelloDocfx.Class1.InnerClass" data-throw-if-not-resolved="false"></xref>
  overload: HelloDocfx.Class1.SetInnerClass*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: HelloDocfx
  commentId: N:HelloDocfx
  isExternal: false
  name: HelloDocfx
  nameWithType: HelloDocfx
  fullName: HelloDocfx
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: HelloDocfx.Class1.Value*
  commentId: Overload:HelloDocfx.Class1.Value
  isExternal: false
  name: Value
  nameWithType: Class1.Value
  fullName: HelloDocfx.Class1.Value
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: HelloDocfx.Class1.#ctor*
  commentId: Overload:HelloDocfx.Class1.#ctor
  isExternal: false
  name: Class1
  nameWithType: Class1.Class1
  fullName: HelloDocfx.Class1.Class1
- uid: HelloDocfx.Class1.ConvertToDouble*
  commentId: Overload:HelloDocfx.Class1.ConvertToDouble
  isExternal: false
  name: ConvertToDouble
  nameWithType: Class1.ConvertToDouble
  fullName: HelloDocfx.Class1.ConvertToDouble
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: HelloDocfx.Class1.InnerClass
  commentId: T:HelloDocfx.Class1.InnerClass
  parent: HelloDocfx
  isExternal: false
  name: Class1.InnerClass
  nameWithType: Class1.InnerClass
  fullName: HelloDocfx.Class1.InnerClass
- uid: HelloDocfx.Class1.SetInnerClass*
  commentId: Overload:HelloDocfx.Class1.SetInnerClass
  isExternal: false
  name: SetInnerClass
  nameWithType: Class1.SetInnerClass
  fullName: HelloDocfx.Class1.SetInnerClass
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
